name: Checks

on:
  pull_request: { branches: [main] }
  push: { branches: [main] }

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Nix
        uses: nixbuild/nix-quick-install-action@v19
        with:
          nix_conf: experimental-features = nix-command flakes
      - name: Install dependencies
        run: nix develop -i -c npm ci
      - name: Clean
        run: nix develop -i -c npm run clean
      - name: Build
        run: nix develop -i -c npm run build
      - name: Test
        id: nix-update
        uses: ./
      - name: Write outputs to summary
        run: |
          echo 'commit-message: ${{ steps.nix-update.outputs.commit-message }}' >> $GITHUB_STEP_SUMMARY
          echo '***' >> $GITHUB_STEP_SUMMARY

          echo 'title: ${{ steps.nix-update.outputs.pull-request-title }}' >> $GITHUB_STEP_SUMMARY
          echo '***' >> $GITHUB_STEP_SUMMARY

          echo '${{ steps.nix-update.outputs.pull-request-body }}' >> $GITHUB_STEP_SUMMARY

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Nix
        uses: nixbuild/nix-quick-install-action@v19
        with:
          nix_conf: experimental-features = nix-command flakes
      - name: Install dependencies
        run: nix develop -i -c npm ci
      - name: Check formatting
        run: nix develop -i -c npm run format-check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Nix
        uses: nixbuild/nix-quick-install-action@v19
        with:
          nix_conf: experimental-features = nix-command flakes
      - name: Install dependencies
        run: nix develop -i -c npm ci
      - name: Check lint
        run: nix develop -i -c npm run lint
